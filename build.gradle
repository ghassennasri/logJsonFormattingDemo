buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

plugins {
    id 'java'
}
group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


repositories {
    mavenCentral()
}
apply plugin: 'com.github.johnrengelman.shadow'
dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.19.0'

    /// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7'
    // https://mvnrepository.com/artifact/net.logstash.log4j/jsonevent-layout
    implementation group: 'net.logstash.log4j', name: 'jsonevent-layout', version: '1.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1' // Use the latest version available

}

test {
    useJUnitPlatform()
}
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'org.example.Main'
        )
    }
}
task run(type: JavaExec) {
    mainClass = 'org.example.Main'
    classpath = sourceSets.main.runtimeClasspath

}
shadowJar {
    archiveBaseName = "logManagementMock"
    archiveClassifier = ''
}
